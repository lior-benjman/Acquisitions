name: Tests

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

jobs:
  unit-integration-tests:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      NODE_OPTIONS: --experimental-vm-modules
      # Provide a valid-looking Postgres URL so imports succeed; tests don't hit DB
      DATABASE_URL: postgresql://neon:npg@localhost:5432/neondb?sslmode=require
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        id: test
        run: npm test -- --coverage

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          if-no-files-found: ignore
          retention-days: 30

      - name: Append coverage summary
        if: always()
        run: |
          if [ -f coverage/coverage-summary.json ]; then
            node -e '
              const fs = require("fs");
              const s = JSON.parse(fs.readFileSync("coverage/coverage-summary.json", "utf8"));
              const t = s.total;
              const lines = [
                "## Test Coverage Summary",
                "",
                `Statements: ${t.statements.pct}% (${t.statements.covered}/${t.statements.total})`,
                `Branches:   ${t.branches.pct}% (${t.branches.covered}/${t.branches.total})`,
                `Functions:  ${t.functions.pct}% (${t.functions.covered}/${t.functions.total})`,
                `Lines:      ${t.lines.pct}% (${t.lines.covered}/${t.lines.total})`
              ].join("\n");
              fs.appendFileSync(process.env.GITHUB_STEP_SUMMARY, lines + "\n");
            ';
          else
            echo "## Tests completed" >> "$GITHUB_STEP_SUMMARY";
          fi

      - name: Annotate on failure
        if: failure()
        run: |
          echo "::error title=Tests failed::One or more tests failed. See logs above for details."
          echo "## Tests Failed" >> "$GITHUB_STEP_SUMMARY"
          echo "Please inspect the job logs for failing test output." >> "$GITHUB_STEP_SUMMARY"

